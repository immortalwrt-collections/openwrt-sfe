diff --git a/v1.0/src/nss_crypto_dtsi.c b/v1.0/src/nss_crypto_dtsi.c
index d1c92d2..d39c18f 100644
--- a/v1.0/src/nss_crypto_dtsi.c
+++ b/v1.0/src/nss_crypto_dtsi.c
@@ -310,11 +310,11 @@ static int nss_crypto_probe(struct platform_device *pdev)
 	e_ctrl->dev = &pdev->dev;
 
 	e_ctrl->cmd_base = crypto_res.start;
-	e_ctrl->crypto_base = ioremap_nocache(e_ctrl->cmd_base, resource_size(&crypto_res));
+	e_ctrl->crypto_base = ioremap(e_ctrl->cmd_base, resource_size(&crypto_res));
 	nss_crypto_assert(e_ctrl->crypto_base);
 
 	e_ctrl->bam_pbase = bam_res.start;
-	e_ctrl->bam_base = ioremap_nocache(e_ctrl->bam_pbase, resource_size(&bam_res));
+	e_ctrl->bam_base = ioremap(e_ctrl->bam_pbase, resource_size(&bam_res));
 	nss_crypto_assert(e_ctrl->bam_base);
 
 	e_ctrl->bam_ee = bam_ee;
diff --git a/v1.0/src/nss_crypto_platform.c b/v1.0/src/nss_crypto_platform.c
index 27abe46..db14171 100644
--- a/v1.0/src/nss_crypto_platform.c
+++ b/v1.0/src/nss_crypto_platform.c
@@ -134,11 +134,11 @@ static int nss_crypto_probe(struct platform_device *pdev)
 	e_ctrl->bam_ee = res->bam_ee;
 
 	e_ctrl->cmd_base = res->crypto_pbase;
-	e_ctrl->crypto_base = ioremap_nocache(res->crypto_pbase, res->crypto_pbase_sz);
+	e_ctrl->crypto_base = ioremap(res->crypto_pbase, res->crypto_pbase_sz);
 	nss_crypto_assert(e_ctrl->crypto_base);
 
 	e_ctrl->bam_pbase = res->bam_pbase;
-	e_ctrl->bam_base = ioremap_nocache(res->bam_pbase, res->bam_pbase_sz);
+	e_ctrl->bam_base = ioremap(res->bam_pbase, res->bam_pbase_sz);
 	nss_crypto_assert(e_ctrl->bam_base);
 
 	/*
diff --git a/v1.0/tool/nss_crypto_bench.c b/v1.0/tool/nss_crypto_bench.c
index 273f62a..d352207 100644
--- a/v1.0/tool/nss_crypto_bench.c
+++ b/v1.0/tool/nss_crypto_bench.c
@@ -75,8 +75,8 @@ static DECLARE_WAIT_QUEUE_HEAD(tx_comp);
 static DECLARE_WAIT_QUEUE_HEAD(tx_start);
 static struct task_struct *tx_thread = NULL;
 
-static struct timeval init_time;
-static struct timeval comp_time;
+static struct timespec64 init_time;
+static struct timespec64 comp_time;
 static spinlock_t op_lock;
 static nss_crypto_handle_t crypto_hdl;
 
@@ -782,7 +782,7 @@ static int crypto_bench_tx(void *arg)
 		crypto_bench_debug("#");
 
 		/* get start time */
-		do_gettimeofday(&init_time);
+		ktime_get_real_ts64(&init_time);
 
 		/**
 		 * Request submission
@@ -812,8 +812,8 @@ static int crypto_bench_tx(void *arg)
 		 * Calculate time and output the Mbps
 		 */
 
-		init_usecs  = (init_time.tv_sec * 1000 * 1000) + init_time.tv_usec;
-		comp_usecs  = (comp_time.tv_sec * 1000 * 1000) + comp_time.tv_usec;
+		init_usecs  = (init_time.tv_sec * 1000 * 1000) + (init_time.tv_nsec / NSEC_PER_USEC);
+		comp_usecs  = (comp_time.tv_sec * 1000 * 1000) + (comp_time.tv_nsec / NSEC_PER_USEC);
 		delta_usecs = comp_usecs - init_usecs;
 
 		reqs_completed = param.num_reqs - atomic_read(&tx_reqs);
@@ -870,7 +870,7 @@ static void crypto_bench_done(struct nss_crypto_buf *buf)
 	nss_crypto_buf_free(crypto_hdl, buf);
 
 	if (atomic_dec_and_test(&tx_reqs)) {
-		do_gettimeofday(&comp_time);
+		ktime_get_real_ts64(&comp_time);
 
 		wake_up_interruptible(&tx_comp);
 		param.num_loops--;
diff --git a/v2.0/src/hal/ipq60xx/nss_crypto_eip197.c b/v2.0/src/hal/ipq60xx/nss_crypto_eip197.c
index 70995de..8549395 100644
--- a/v2.0/src/hal/ipq60xx/nss_crypto_eip197.c
+++ b/v2.0/src/hal/ipq60xx/nss_crypto_eip197.c
@@ -413,7 +413,7 @@ int nss_crypto_eip197_engine_init(struct platform_device *pdev, struct device_no
 	 * remap the I/O addresses
 	 */
 	paddr = res->start + offset;
-	vaddr = ioremap_nocache(paddr, resource_size(res));
+	vaddr = ioremap(paddr, resource_size(res));
 	if (!vaddr) {
 		nss_crypto_warn("%p: unable to remap crypto_addr(0x%p)\n", node, (void *)paddr);
 		return -EIO;
diff --git a/v2.0/src/hal/ipq807x/nss_crypto_eip197.c b/v2.0/src/hal/ipq807x/nss_crypto_eip197.c
index 9740e4a..439f155 100644
--- a/v2.0/src/hal/ipq807x/nss_crypto_eip197.c
+++ b/v2.0/src/hal/ipq807x/nss_crypto_eip197.c
@@ -414,7 +414,7 @@ int nss_crypto_eip197_engine_init(struct platform_device *pdev, struct device_no
 	 * remap the I/O addresses
 	 */
 	paddr = res->start + offset;
-	vaddr = ioremap_nocache(paddr, resource_size(res));
+	vaddr = ioremap(paddr, resource_size(res));
 	if (!vaddr) {
 		nss_crypto_warn("%p: unable to remap crypto_addr(0x%p)\n", node, (void *)paddr);
 		return -EIO;
diff --git a/v2.0/tool/nss_crypto_bench.c b/v2.0/tool/nss_crypto_bench.c
index f06a13f..6d246bb 100644
--- a/v2.0/tool/nss_crypto_bench.c
+++ b/v2.0/tool/nss_crypto_bench.c
@@ -76,8 +76,8 @@ static DECLARE_WAIT_QUEUE_HEAD(tx_comp);
 static DECLARE_WAIT_QUEUE_HEAD(tx_start);
 static struct task_struct *tx_thread;
 
-static struct timeval init_time;
-static struct timeval comp_time;
+static struct timespec64 init_time;
+static struct timespec64 comp_time;
 static spinlock_t op_lock;
 static struct nss_crypto_user *crypto_hdl;
 static struct nss_crypto_user_ctx *ctx;
@@ -775,7 +775,7 @@ static int crypto_bench_tx(void *arg)
 		crypto_bench_debug("#");
 
 		/* get start time */
-		do_gettimeofday(&init_time);
+		ktime_get_real_ts64(&init_time);
 
 		/**
 		 * Request submission
@@ -805,8 +805,8 @@ static int crypto_bench_tx(void *arg)
 		 * Calculate time and output the Mbps
 		 */
 
-		init_usecs  = (init_time.tv_sec * 1000 * 1000) + init_time.tv_usec;
-		comp_usecs  = (comp_time.tv_sec * 1000 * 1000) + comp_time.tv_usec;
+		init_usecs  = (init_time.tv_sec * 1000 * 1000) + (init_time.tv_nsec / NSEC_PER_USEC);
+		comp_usecs  = (comp_time.tv_sec * 1000 * 1000) + (comp_time.tv_nsec / NSEC_PER_USEC);
 		delta_usecs = comp_usecs - init_usecs;
 
 		reqs_completed = param.num_reqs - atomic_read(&tx_reqs);
@@ -858,7 +858,7 @@ void crypto_bench_done(void *app_data, struct nss_crypto_hdr *ch, uint8_t error)
 	nss_crypto_hdr_free(crypto_hdl, ch);
 
 	if (atomic_dec_and_test(&tx_reqs)) {
-		do_gettimeofday(&comp_time);
+		ktime_get_real_ts64(&comp_time);
 
 		wake_up_interruptible(&tx_comp);
 		param.num_loops--;
