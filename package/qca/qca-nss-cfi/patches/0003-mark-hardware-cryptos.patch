diff --git a/cryptoapi/v1.1/nss_cryptoapi.c b/cryptoapi/v1.1/nss_cryptoapi.c
--- a/cryptoapi/v1.1/nss_cryptoapi.c
+++ b/cryptoapi/v1.1/nss_cryptoapi.c
@@ -66,7 +66,7 @@ struct aead_alg cryptoapi_aead_algs[] = {
 			.cra_name       = "echainiv(authenc(hmac(sha1),cbc(aes)))",
 			.cra_driver_name = "nss-hmac-sha1-cbc-aes",
 			.cra_priority   = 10000,
-			.cra_flags      = CRYPTO_ALG_ASYNC | CRYPTO_ALG_NOSUPP_SG | CRYPTO_ALG_NEED_FALLBACK,
+			.cra_flags      = CRYPTO_ALG_ASYNC | CRYPTO_ALG_NOSUPP_SG | CRYPTO_ALG_NEED_FALLBACK | CRYPTO_ALG_KERN_DRIVER_ONLY,
 			.cra_blocksize  = AES_BLOCK_SIZE,
 			.cra_ctxsize    = sizeof(struct nss_cryptoapi_ctx),
 			.cra_alignmask  = 0,
@@ -87,7 +87,7 @@ struct aead_alg cryptoapi_aead_algs[] = {
 			.cra_name       = "seqiv(authenc(hmac(sha1),rfc3686(ctr(aes))))",
 			.cra_driver_name = "nss-hmac-sha1-rfc3686-ctr-aes",
 			.cra_priority   = 10000,
-			.cra_flags      = CRYPTO_ALG_ASYNC | CRYPTO_ALG_NOSUPP_SG | CRYPTO_ALG_NEED_FALLBACK,
+			.cra_flags      = CRYPTO_ALG_ASYNC | CRYPTO_ALG_NOSUPP_SG | CRYPTO_ALG_NEED_FALLBACK | CRYPTO_ALG_KERN_DRIVER_ONLY,
 			.cra_blocksize  = AES_BLOCK_SIZE,
 			.cra_ctxsize    = sizeof(struct nss_cryptoapi_ctx),
 			.cra_alignmask  = 0,
@@ -108,7 +108,7 @@ struct aead_alg cryptoapi_aead_algs[] = {
 			.cra_name       = "echainiv(authenc(hmac(sha1),cbc(des3_ede)))",
 			.cra_driver_name = "nss-hmac-sha1-cbc-3des",
 			.cra_priority   = 300,
-			.cra_flags      = CRYPTO_ALG_ASYNC | CRYPTO_ALG_NOSUPP_SG,
+			.cra_flags      = CRYPTO_ALG_ASYNC | CRYPTO_ALG_NOSUPP_SG | CRYPTO_ALG_KERN_DRIVER_ONLY,
 			.cra_blocksize  = DES3_EDE_BLOCK_SIZE,
 			.cra_ctxsize    = sizeof(struct nss_cryptoapi_ctx),
 			.cra_alignmask  = 0,
@@ -129,7 +129,7 @@ struct aead_alg cryptoapi_aead_algs[] = {
 			.cra_name       = "echainiv(authenc(hmac(sha256),cbc(aes)))",
 			.cra_driver_name = "nss-hmac-sha256-cbc-aes",
 			.cra_priority   = 10000,
-			.cra_flags      = CRYPTO_ALG_ASYNC | CRYPTO_ALG_NOSUPP_SG | CRYPTO_ALG_NEED_FALLBACK,
+			.cra_flags      = CRYPTO_ALG_ASYNC | CRYPTO_ALG_NOSUPP_SG | CRYPTO_ALG_NEED_FALLBACK | CRYPTO_ALG_KERN_DRIVER_ONLY,
 			.cra_blocksize  = AES_BLOCK_SIZE,
 			.cra_ctxsize    = sizeof(struct nss_cryptoapi_ctx),
 			.cra_alignmask  = 0,
@@ -150,7 +150,7 @@ struct aead_alg cryptoapi_aead_algs[] = {
 			.cra_name       = "seqiv(authenc(hmac(sha256),rfc3686(ctr(aes))))",
 			.cra_driver_name = "nss-hmac-sha256-rfc3686-ctr-aes",
 			.cra_priority   = 10000,
-			.cra_flags      = CRYPTO_ALG_ASYNC | CRYPTO_ALG_NOSUPP_SG | CRYPTO_ALG_NEED_FALLBACK,
+			.cra_flags      = CRYPTO_ALG_ASYNC | CRYPTO_ALG_NOSUPP_SG | CRYPTO_ALG_NEED_FALLBACK | CRYPTO_ALG_KERN_DRIVER_ONLY,
 			.cra_blocksize  = AES_BLOCK_SIZE,
 			.cra_ctxsize    = sizeof(struct nss_cryptoapi_ctx),
 			.cra_alignmask  = 0,
@@ -171,7 +171,7 @@ struct aead_alg cryptoapi_aead_algs[] = {
 			.cra_name       = "echainiv(authenc(hmac(sha256),cbc(des3_ede)))",
 			.cra_driver_name = "nss-hmac-sha256-cbc-3des",
 			.cra_priority   = 300,
-			.cra_flags      = CRYPTO_ALG_ASYNC | CRYPTO_ALG_NOSUPP_SG,
+			.cra_flags      = CRYPTO_ALG_ASYNC | CRYPTO_ALG_NOSUPP_SG | CRYPTO_ALG_KERN_DRIVER_ONLY,
 			.cra_blocksize  = DES3_EDE_BLOCK_SIZE,
 			.cra_ctxsize    = sizeof(struct nss_cryptoapi_ctx),
 			.cra_alignmask  = 0,
@@ -197,7 +197,7 @@ static struct crypto_alg cryptoapi_ablkcipher_algs[] = {
 		.cra_name       = "cbc(aes)",
 		.cra_driver_name = "nss-cbc-aes",
 		.cra_priority   = 10000,
-		.cra_flags      = CRYPTO_ALG_TYPE_ABLKCIPHER | CRYPTO_ALG_NOSUPP_SG | CRYPTO_ALG_ASYNC | CRYPTO_ALG_NEED_FALLBACK,
+		.cra_flags      = CRYPTO_ALG_TYPE_ABLKCIPHER | CRYPTO_ALG_NOSUPP_SG | CRYPTO_ALG_ASYNC | CRYPTO_ALG_NEED_FALLBACK | CRYPTO_ALG_KERN_DRIVER_ONLY,
 		.cra_blocksize  = AES_BLOCK_SIZE,
 		.cra_ctxsize    = sizeof(struct nss_cryptoapi_ctx),
 		.cra_alignmask  = 0,
@@ -220,7 +220,7 @@ static struct crypto_alg cryptoapi_ablkcipher_algs[] = {
 		.cra_name       = "rfc3686(ctr(aes))",
 		.cra_driver_name = "nss-rfc3686-ctr-aes",
 		.cra_priority   = 30000,
-		.cra_flags      = CRYPTO_ALG_TYPE_ABLKCIPHER | CRYPTO_ALG_NOSUPP_SG | CRYPTO_ALG_ASYNC | CRYPTO_ALG_NEED_FALLBACK,
+		.cra_flags      = CRYPTO_ALG_TYPE_ABLKCIPHER | CRYPTO_ALG_NOSUPP_SG | CRYPTO_ALG_ASYNC | CRYPTO_ALG_NEED_FALLBACK | CRYPTO_ALG_KERN_DRIVER_ONLY,
 		.cra_blocksize  = AES_BLOCK_SIZE,
 		.cra_ctxsize    = sizeof(struct nss_cryptoapi_ctx),
 		.cra_alignmask  = 0,
@@ -243,7 +243,7 @@ static struct crypto_alg cryptoapi_ablkcipher_algs[] = {
 		.cra_name       = "cbc(des3_ede)",
 		.cra_driver_name = "nss-cbc-3des",
 		.cra_priority   = 1000,
-		.cra_flags      = CRYPTO_ALG_TYPE_ABLKCIPHER | CRYPTO_ALG_NOSUPP_SG | CRYPTO_ALG_ASYNC,
+		.cra_flags      = CRYPTO_ALG_TYPE_ABLKCIPHER | CRYPTO_ALG_NOSUPP_SG | CRYPTO_ALG_ASYNC | CRYPTO_ALG_KERN_DRIVER_ONLY,
 		.cra_blocksize  = DES3_EDE_BLOCK_SIZE,
 		.cra_ctxsize    = sizeof(struct nss_cryptoapi_ctx),
 		.cra_alignmask  = 0,
